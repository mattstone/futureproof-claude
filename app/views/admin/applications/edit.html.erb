<% content_for :page_title, "Edit Application" %>

<div class="admin-actions-bar">
  <div>
    <%= link_to "← Back to Applications", admin_applications_path, class: "admin-btn admin-btn-secondary" %>
  </div>
  
  <div class="admin-actions">
    <%= link_to "View Application", admin_application_path(@application), class: "admin-btn admin-btn-secondary" %>
  </div>
</div>

<div class="admin-two-column-layout">
  <!-- Left Column - Application Edit Form -->
  <div class="admin-left-column">
    <%= form_with(model: [:admin, @application], local: true, class: "admin-form") do |form| %>
      <h2>Edit Application #<%= @application.id %></h2>
      
      <div style="margin-bottom: 24px;"></div>
      
      <% if @application.errors.any? %>
        <div class="alert alert-danger">
          <h4><%= pluralize(@application.errors.count, "error") %> prohibited this application from being saved:</h4>
          <ul>
            <% @application.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="field">
        <%= form.label :user_id, "User" %>
        <%= form.select :user_id, 
            options_from_collection_for_select(@users, :id, :display_name, @application.user_id), 
            { prompt: 'Select User' }, 
            { required: true } %>
      </div>

      <div class="field">
        <%= form.label :address %>
        <%= form.text_area :address, rows: 3, required: true, placeholder: "Enter property address" %>
      </div>

      <div class="field">
        <%= form.label :home_value, "Home Value ($)" %>
        <%= form.number_field :home_value, required: true, min: 1, max: 50000000, 
            placeholder: "e.g., 1500000", step: 1000 %>
        <small style="color: #6b7280; font-size: 14px;">Enter amount without commas (e.g., 1500000 for $1.5M)</small>
      </div>

      <div class="field">
        <%= form.label :status %>
        <%= form.select :status, 
            options_for_select([
              ['Created', 'created'],
              ['User Details', 'user_details'],
              ['Property Details', 'property_details'],
              ['Income and Loan Options', 'income_and_loan_options'],
              ['Submitted', 'submitted'],
              ['Processing', 'processing'],
              ['Rejected', 'rejected'],
              ['Accepted', 'accepted']
            ], @application.status), 
            { prompt: 'Select Status' }, 
            { required: true } %>
      </div>

      <% if @application.status_rejected? %>
        <div class="field">
          <%= form.label :rejected_reason %>
          <%= form.text_area :rejected_reason, rows: 3, placeholder: "Reason for rejection..." %>
        </div>
      <% end %>

      <div class="actions" style="display: flex; gap: 12px; margin-top: 32px;">
        <%= form.submit "Update Application", class: "admin-btn admin-btn-primary" %>
        <%= link_to "Cancel", admin_application_path(@application), class: "admin-btn admin-btn-secondary" %>
      </div>
    <% end %>
  </div>

  <!-- Right Column - Messages and Communication -->
  <div class="admin-right-column">
    <%= render 'messaging_interface' %>
  </div>
</div>

<%= render 'messaging_assets' %>

<style>
/* Two-Column Layout */
.admin-two-column-layout {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 40px;
  margin-top: 20px;
}

.admin-left-column {
  min-width: 0; /* Prevents grid overflow */
}

.admin-right-column {
  min-width: 0; /* Prevents grid overflow */
  position: sticky;
  top: 20px;
  height: fit-content;
}

/* Responsive Design */
@media (max-width: 1400px) {
  .admin-two-column-layout {
    grid-template-columns: 1.2fr 0.8fr;
    gap: 32px;
  }
}

@media (max-width: 1200px) {
  .admin-two-column-layout {
    grid-template-columns: 1fr;
    gap: 24px;
  }
  
  .admin-right-column {
    position: static;
  }
}
</style>

<script>
// Auto-show/hide rejected reason field
document.addEventListener('DOMContentLoaded', function() {
  const statusSelect = document.querySelector('select[name="application[status]"]');
  const rejectedReasonField = document.querySelector('textarea[name="application[rejected_reason]"]');
  
  if (statusSelect && rejectedReasonField) {
    const rejectedReasonContainer = rejectedReasonField.closest('.field');
    
    function toggleRejectedReason() {
      if (statusSelect.value === 'rejected') {
        rejectedReasonContainer.style.display = 'block';
        rejectedReasonField.required = true;
      } else {
        rejectedReasonContainer.style.display = 'none';
        rejectedReasonField.required = false;
      }
    }
    
    statusSelect.addEventListener('change', toggleRejectedReason);
    toggleRejectedReason(); // Initial check
  }
});
</script>